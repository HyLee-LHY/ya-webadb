{"version":3,"file":"static/chunks/957-ffba5b07365b7718.js","mappings":"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GxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAG7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAG7B,SAAK,CAAC,CAAEhf,EAAG,EAAGxI,EAAG,EAAGunB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.68.0_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.tsx","webpack://_N_E/FitAddon/webpack/universalModuleDefinition","webpack://_N_E/FitAddon/./src/FitAddon.ts","webpack://_N_E/FitAddon/webpack/bootstrap","webpack://_N_E/FitAddon/webpack/startup","webpack://_N_E/SearchAddon/webpack/universalModuleDefinition","webpack://_N_E/SearchAddon/./src/SearchAddon.ts","webpack://_N_E/WebglAddon/webpack/universalModuleDefinition","webpack://_N_E/WebglAddon/./src/GlyphRenderer.ts","webpack://_N_E/WebglAddon/./src/RectangleRenderer.ts","webpack://_N_E/WebglAddon/./src/RenderModel.ts","webpack://_N_E/WebglAddon/./src/TypedArray.ts","webpack://_N_E/WebglAddon/./src/WebglRenderer.ts","webpack://_N_E/WebglAddon/./src/WebglUtils.ts","webpack://_N_E/WebglAddon/./src/atlas/CharAtlasCache.ts","webpack://_N_E/WebglAddon/./src/atlas/CharAtlasUtils.ts","webpack://_N_E/WebglAddon/./src/atlas/WebglCharAtlas.ts","webpack://_N_E/WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://_N_E/WebglAddon/../../src/browser/Color.ts","webpack://_N_E/WebglAddon/../../src/browser/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/CustomGlyphs.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/RendererUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/atlas/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/EventEmitter.ts","webpack://_N_E/WebglAddon/../../src/common/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/common/Platform.ts","webpack://_N_E/WebglAddon/../../src/common/TypedArrayUtils.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/CellData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/input/TextDecoder.ts","webpack://_N_E/WebglAddon/webpack/bootstrap","webpack://_N_E/WebglAddon/./src/WebglAddon.ts"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IBufferLine, IDisposable, ITerminalAddon, ISelectionPosition } from 'xterm';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void { }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.startRow;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    const isReverseSearch = true;\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    let result: ISearchResult | undefined;\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.endRow;\n          searchPosition.startCol = currentSelection.endColumn;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          offset += cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whethera result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined): boolean {\n    const terminal = this._terminal!;\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    // If it is not in the viewport then we scroll else it just gets selected\n    if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n      let scroll = result.row - terminal.buffer.active.viewportY;\n      scroll -= Math.floor(terminal.rows / 2);\n      terminal.scrollLines(scroll);\n    }\n    return true;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel, IRasterizedGlyph } from './Types';\nimport { COMBINED_CHAR_BIT_MASK, RENDER_MODEL_INDICIES_PER_CELL, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_BG_OFFSET } from './RenderModel';\nimport { fill } from 'common/TypedArrayUtils';\nimport { slice } from './TypedArray';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CODE, Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Terminal, IBufferLine } from 'xterm';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  selectionAttributes: Float32Array;\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXCOORD = 4,\n  TEXSIZE = 5\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\n\nuniform sampler2D u_texture;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(u_texture, v_texcoord);\n}`;\n\nconst INDICES_PER_CELL = 10;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\nexport class GlyphRenderer {\n  private _atlas: WebglCharAtlas | undefined;\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _projectionLocation: WebGLUniformLocation;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _textureLocation: WebGLUniformLocation;\n  private _atlasTexture: WebGLTexture;\n  private _attributesBuffer: WebGLBuffer;\n  private _activeBuffer: number = 0;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ],\n    selectionAttributes: new Float32Array(0)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n    const program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this._program = program;\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 6 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 8 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup empty texture atlas\n    this._atlasTexture = throwIfFalsy(gl.createTexture());\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.onResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, chars: string): void {\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, chars);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, chars?: string): void {\n    const terminal = this._terminal;\n\n    const i = (y * terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    let rasterizedGlyph: IRasterizedGlyph;\n    if (!this._atlas) {\n      return;\n    }\n    if (chars && chars.length > 1) {\n      rasterizedGlyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg);\n    } else {\n      rasterizedGlyph = this._atlas.getRasterizedGlyph(code, bg, fg);\n    }\n\n    // Fill empty if no glyph was found\n    if (!rasterizedGlyph) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    // a_origin\n    array[i    ] = -rasterizedGlyph.offset.x + this._dimensions.scaledCharLeft;\n    array[i + 1] = -rasterizedGlyph.offset.y + this._dimensions.scaledCharTop;\n    // a_size\n    array[i + 2] = rasterizedGlyph.size.x / this._dimensions.scaledCanvasWidth;\n    array[i + 3] = rasterizedGlyph.size.y / this._dimensions.scaledCanvasHeight;\n    // a_texcoord\n    array[i + 4] = rasterizedGlyph.texturePositionClipSpace.x;\n    array[i + 5] = rasterizedGlyph.texturePositionClipSpace.y;\n    // a_texsize\n    array[i + 6] = rasterizedGlyph.sizeClipSpace.x;\n    array[i + 7] = rasterizedGlyph.sizeClipSpace.y;\n    // a_cellpos only changes on resize\n  }\n\n  public updateSelection(model: IRenderModel): void {\n    const terminal = this._terminal;\n\n    this._vertices.selectionAttributes = slice(this._vertices.attributes, 0);\n\n    const bg = (this._colors.selectionOpaque.rgba >>> 8) | Attributes.CM_RGB;\n\n    if (model.selection.columnSelectMode) {\n      const startCol = model.selection.startCol;\n      const width = model.selection.endCol - startCol;\n      const height = model.selection.viewportCappedEndRow - model.selection.viewportCappedStartRow + 1;\n      for (let y = model.selection.viewportCappedStartRow; y < model.selection.viewportCappedStartRow + height; y++) {\n        this._updateSelectionRange(startCol, startCol + width, y, model, bg);\n      }\n    } else {\n      // Draw first row\n      const startCol = model.selection.viewportStartRow === model.selection.viewportCappedStartRow ? model.selection.startCol : 0;\n      const startRowEndCol = model.selection.viewportCappedStartRow === model.selection.viewportCappedEndRow ? model.selection.endCol : terminal.cols;\n      this._updateSelectionRange(startCol, startRowEndCol, model.selection.viewportCappedStartRow, model, bg);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(model.selection.viewportCappedEndRow - model.selection.viewportCappedStartRow - 1, 0);\n      for (let y = model.selection.viewportCappedStartRow + 1; y <= model.selection.viewportCappedStartRow + middleRowsCount; y++) {\n        this._updateSelectionRange(0, startRowEndCol, y, model, bg);\n      }\n\n      // Draw final row\n      if (model.selection.viewportCappedStartRow !== model.selection.viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = model.selection.viewportEndRow === model.selection.viewportCappedEndRow ? model.selection.endCol : terminal.cols;\n        this._updateSelectionRange(0, endCol, model.selection.viewportCappedEndRow, model, bg);\n      }\n    }\n  }\n\n  private _updateSelectionRange(startCol: number, endCol: number, y: number, model: IRenderModel, bg: number): void {\n    const terminal = this._terminal;\n    const row = y + terminal.buffer.active.viewportY;\n    let line: IBufferLine | undefined;\n    for (let x = startCol; x < endCol; x++) {\n      const offset = (y * this._terminal.cols + x) * RENDER_MODEL_INDICIES_PER_CELL;\n      const code = model.cells[offset];\n      let fg = model.cells[offset + RENDER_MODEL_FG_OFFSET];\n      if (fg & FgFlags.INVERSE) {\n        const workCell = new AttributeData();\n        workCell.fg = fg;\n        workCell.bg = model.cells[offset + RENDER_MODEL_BG_OFFSET];\n        // Get attributes from fg (excluding inverse) and resolve inverse by pullibng rgb colors\n        // from bg. This is needed since the inverse fg color should be based on the original bg\n        // color, not on the selection color\n        fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK | FgFlags.INVERSE);\n        switch (workCell.getBgColorMode()) {\n          case Attributes.CM_P16:\n          case Attributes.CM_P256:\n            const c = this._getColorFromAnsiIndex(workCell.getBgColor()).rgba;\n            fg |= (c >> 8) & Attributes.RED_MASK | (c >> 8) & Attributes.GREEN_MASK | (c >> 8) & Attributes.BLUE_MASK;\n          case Attributes.CM_RGB:\n            const arr = AttributeData.toColorRGB(workCell.getBgColor());\n            fg |= arr[0] << Attributes.RED_SHIFT | arr[1] << Attributes.GREEN_SHIFT | arr[2] << Attributes.BLUE_SHIFT;\n          case Attributes.CM_DEFAULT:\n          default:\n            const c2 = this._colors.background.rgba;\n            fg |= (c2 >> 8) & Attributes.RED_MASK | (c2 >> 8) & Attributes.GREEN_MASK | (c2 >> 8) & Attributes.BLUE_MASK;\n        }\n        fg |= Attributes.CM_RGB;\n      }\n      if (code & COMBINED_CHAR_BIT_MASK) {\n        if (!line) {\n          line = terminal.buffer.active.getLine(row);\n        }\n        const chars = line!.getCell(x)!.getChars();\n        this._updateCell(this._vertices.selectionAttributes, x, y, model.cells[offset], bg, fg, chars);\n      } else {\n        this._updateCell(this._vertices.selectionAttributes, x, y, model.cells[offset], bg, fg);\n      }\n    }\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._colors.ansi[idx];\n  }\n\n  public onResize(): void {\n    const terminal = this._terminal;\n    const gl = this._gl;\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    // Update vertices\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n    if (this._vertices.count !== newCount) {\n      this._vertices.count = newCount;\n      this._vertices.attributes = new Float32Array(newCount);\n      for (let i = 0; i < this._vertices.attributesBuffers.length; i++) {\n        this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n      }\n\n      let i = 0;\n      for (let y = 0; y < terminal.rows; y++) {\n        for (let x = 0; x < terminal.cols; x++) {\n          this._vertices.attributes[i + 8] = x / terminal.cols;\n          this._vertices.attributes[i + 9] = y / terminal.rows;\n          i += INDICES_PER_CELL;\n        }\n      }\n    }\n  }\n\n  public setColors(): void {\n  }\n\n  public render(renderModel: IRenderModel, isSelectionVisible: boolean): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = (isSelectionVisible ? this._vertices.selectionAttributes : this._vertices.attributes).subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the texture atlas if it's changed\n    if (this._atlas.hasCanvasChanged) {\n      this._atlas.hasCanvasChanged = false;\n      gl.uniform1i(this._textureLocation, 0);\n      gl.activeTexture(gl.TEXTURE0 + 0);\n      gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._atlas.cacheCanvas);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    // Set uniforms\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: WebglCharAtlas): void {\n    const gl = this._gl;\n    this._atlas = atlas;\n\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.cacheCanvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = (a_position + (a_unitquad * a_size)) / u_resolution;\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  selection: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\nexport class RectangleRenderer {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n  private _selectionFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY),\n    selection: new Float32Array(3 * INDICES_PER_RECTANGLE)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n\n    // Uniform locations\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors();\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n\n    // Bind selection buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.selection, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, 3);\n  }\n\n  public onResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setColors(): void {\n    this._updateCachedColors();\n    this._updateViewportRectangle();\n  }\n\n  private _updateCachedColors(): void {\n    this._bgFloat = this._colorToFloat32Array(this._colors.background);\n    this._selectionFloat = this._colorToFloat32Array(this._colors.selectionOpaque);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.scaledCellWidth,\n      this._terminal.rows * this._dimensions.scaledCellHeight,\n      this._bgFloat\n    );\n  }\n\n  public updateSelection(model: ISelectionRenderModel): void {\n    const terminal = this._terminal;\n\n    if (!model.hasSelection) {\n      fill(this._vertices.selection, 0, 0);\n      return;\n    }\n\n    if (model.columnSelectMode) {\n      const startCol = model.startCol;\n      const width = model.endCol - startCol;\n      const height = model.viewportCappedEndRow - model.viewportCappedStartRow + 1;\n      this._addRectangleFloat(\n        this._vertices.selection,\n        0,\n        startCol * this._dimensions.scaledCellWidth,\n        model.viewportCappedStartRow * this._dimensions.scaledCellHeight,\n        width * this._dimensions.scaledCellWidth,\n        height * this._dimensions.scaledCellHeight,\n        this._selectionFloat\n      );\n      fill(this._vertices.selection, 0, INDICES_PER_RECTANGLE);\n    } else {\n      // Draw first row\n      const startCol = model.viewportStartRow === model.viewportCappedStartRow ? model.startCol : 0;\n      const startRowEndCol = model.viewportCappedStartRow === model.viewportEndRow ? model.endCol : terminal.cols;\n      this._addRectangleFloat(\n        this._vertices.selection,\n        0,\n        startCol * this._dimensions.scaledCellWidth,\n        model.viewportCappedStartRow * this._dimensions.scaledCellHeight,\n        (startRowEndCol - startCol) * this._dimensions.scaledCellWidth,\n        this._dimensions.scaledCellHeight,\n        this._selectionFloat\n      );\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(model.viewportCappedEndRow - model.viewportCappedStartRow - 1, 0);\n      this._addRectangleFloat(\n        this._vertices.selection,\n        INDICES_PER_RECTANGLE,\n        0,\n        (model.viewportCappedStartRow + 1) * this._dimensions.scaledCellHeight,\n        terminal.cols * this._dimensions.scaledCellWidth,\n        middleRowsCount * this._dimensions.scaledCellHeight,\n        this._selectionFloat\n      );\n\n      // Draw final row\n      if (model.viewportCappedStartRow !== model.viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = model.viewportEndRow === model.viewportCappedEndRow ? model.endCol : terminal.cols;\n        this._addRectangleFloat(\n          this._vertices.selection,\n          INDICES_PER_RECTANGLE * 2,\n          0,\n          model.viewportCappedEndRow * this._dimensions.scaledCellHeight,\n          endCol * this._dimensions.scaledCellWidth,\n          this._dimensions.scaledCellHeight,\n          this._selectionFloat\n        );\n      } else {\n        fill(this._vertices.selection, 0, INDICES_PER_RECTANGLE * 2);\n      }\n    }\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    let rectangleCount = 1;\n\n    for (let y = 0; y < terminal.rows; y++) {\n      let currentStartX = -1;\n      let currentBg = 0;\n      let currentFg = 0;\n      let currentInverse = false;\n      for (let x = 0; x < terminal.cols; x++) {\n        const modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        const bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        const fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        const inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    let rgba: number | undefined;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.background.rgba;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    const x1 = startX * this._dimensions.scaledCellWidth;\n    const y1 = y * this._dimensions.scaledCellHeight;\n    const r = ((rgba >> 24) & 0xFF) / 255;\n    const g = ((rgba >> 16) & 0xFF) / 255;\n    const b = ((rgba >> 8 ) & 0xFF) / 255;\n\n    this._addRectangle(vertices.attributes, offset, x1, y1, (endX - startX) * this._dimensions.scaledCellWidth, this._dimensions.scaledCellHeight, r, g, b, 1);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 3;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = {\n      hasSelection: false,\n      columnSelectMode: false,\n      viewportStartRow: 0,\n      viewportEndRow: 0,\n      viewportCappedStartRow: 0,\n      viewportCappedEndRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    fill(this.cells, 0, 0);\n    fill(this.lineLengths, 0, 0);\n  }\n\n  public clearSelection(): void {\n    this.selection.hasSelection = false;\n    this.selection.viewportStartRow = 0;\n    this.selection.viewportEndRow = 0;\n    this.selection.viewportCappedStartRow = 0;\n    this.selection.viewportCappedEndRow = 0;\n    this.selection.startCol = 0;\n    this.selection.endCol = 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\nexport function slice<T extends TypedArray>(array: T, start?: number, end?: number): T {\n  // all modern engines that support .slice\n  if (array.slice) {\n    return array.slice(start, end) as T;\n  }\n  return sliceFallback(array, start, end);\n}\n\nexport function sliceFallback<T extends TypedArray>(array: T, start: number = 0, end: number = array.length): T {\n  if (start < 0) {\n    start = (array.length + start) % array.length;\n  }\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  start = Math.min(start, end);\n\n  const result: T = new (array.constructor as any)(end - start);\n  for (let i = 0; i < end - start; ++i) {\n    result[i] = array[i + start];\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { IWebGL2RenderingContext } from './Types';\nimport { RenderModel, COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable } from 'common/Lifecycle';\nimport { Content, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IEvent } from 'xterm';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { ITerminal, IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { CellData } from 'common/buffer/CellData';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { CharData, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlas: WebglCharAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._colors, this._core),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._colors, this._core, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => { this._onContextLoss.fire(e); }));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    this._rectangleRenderer = new RectangleRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n    this._glyphRenderer = new GlyphRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n\n    // Update dimensions and acquire char atlas\n    this.onCharSizeChanged();\n\n    this._isAttached = document.body.contains(this._core.screenElement!);\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    this._canvas.parentElement?.removeChild(this._canvas);\n    super.dispose();\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.cacheCanvas;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    }\n\n    this._rectangleRenderer.setColors();\n    this._glyphRenderer.setColors();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.scaledCanvasWidth;\n    this._canvas.height = this.dimensions.scaledCanvasHeight;\n    this._canvas.style.width = `${this.dimensions.canvasWidth}px`;\n    this._canvas.style.height = `${this.dimensions.canvasHeight}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.canvasWidth}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this._rectangleRenderer.onResize();\n    if (this._model.selection.hasSelection) {\n      // Update selection as dimensions have changed\n      this._rectangleRenderer.updateSelection(this._model.selection);\n    }\n\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.onResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    for (const l of this._renderLayers) {\n      l.onBlur(this._terminal);\n    }\n  }\n\n  public onFocus(): void {\n    for (const l of this._renderLayers) {\n      l.onFocus(this._terminal);\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.onSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n\n    this._updateSelectionModel(start, end, columnSelectMode);\n\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n\n  public onCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.onCursorMove(this._terminal);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    for (const l of this._renderLayers) {\n      l.onOptionsChanged(this._terminal);\n    }\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.scaledCharWidth <= 0 && this.dimensions.scaledCharHeight <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireCharAtlas(this._terminal, this._colors, this.dimensions.scaledCellWidth, this.dimensions.scaledCellHeight, this.dimensions.scaledCharWidth, this.dimensions.scaledCharHeight);\n    if (!('getRasterizedGlyph' in atlas)) {\n      throw new Error('The webgl renderer only works with the webgl char atlas');\n    }\n    this._charAtlas = atlas as WebglCharAtlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  public clearCharAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._model.clear();\n    this._updateModel(0, this._terminal.rows - 1);\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n\n  public clear(): void {\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (document.body.contains(this._core.screenElement!) && (this._core as any)._charSizeService.width && (this._core as any)._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.onGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._model.clear();\n      this._updateSelectionModel(undefined, undefined);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model, this._model.selection.hasSelection);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < terminal.cols; x++) {\n        line.loadCell(x, cell);\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        const chars = cell.getChars();\n        let code = cell.getCode();\n        const i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === cell.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === cell.fg) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = cell.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = cell.fg;\n\n        this._glyphRenderer.updateCell(x, y, code, cell.bg, cell.fg, chars);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            const j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, NULL_CELL_CHAR);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._workCell.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._workCell.fg;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n    if (this._model.selection.hasSelection) {\n      // Model could be updated but the selection is unchanged\n      this._glyphRenderer.updateSelection(this._model);\n    }\n  }\n\n  private _updateSelectionModel(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    const terminal = this._terminal;\n\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this._model.clearSelection();\n      this._rectangleRenderer.updateSelection(this._model.selection);\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this._model.clearSelection();\n      this._rectangleRenderer.updateSelection(this._model.selection);\n      return;\n    }\n\n    this._model.selection.hasSelection = true;\n    this._model.selection.columnSelectMode = columnSelectMode;\n    this._model.selection.viewportStartRow = viewportStartRow;\n    this._model.selection.viewportEndRow = viewportEndRow;\n    this._model.selection.viewportCappedStartRow = viewportCappedStartRow;\n    this._model.selection.viewportCappedEndRow = viewportCappedEndRow;\n    this._model.selection.startCol = start[0];\n    this._model.selection.endCol = end[0];\n\n    this._rectangleRenderer.updateSelection(this._model.selection);\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // TODO: Acquire CharSizeService properly\n\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!(this._core as any)._charSizeService.width || !(this._core as any)._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n\n    // NOTE: ceil fixes sometime, floor does others :s\n\n    this.dimensions.scaledCharWidth = Math.floor((this._core as any)._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil((this._core as any)._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.getOption('lineHeight'));\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.getOption('lineHeight') === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.getOption('letterSpacing'));\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.getOption('letterSpacing') / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._devicePixelRatio);\n\n    // this.dimensions.scaledCanvasHeight = this.dimensions.canvasHeight * devicePixelRatio;\n    // this.dimensions.scaledCanvasWidth = this.dimensions.canvasWidth * devicePixelRatio;\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    // this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    // this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n\n    // This fixes 110% and 125%, not 150% or 175% though\n    this.dimensions.actualCellHeight = this.dimensions.scaledCellHeight / this._devicePixelRatio;\n    this.dimensions.actualCellWidth = this.dimensions.scaledCellWidth / this._devicePixelRatio;\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { WebglCharAtlas } from './WebglCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: WebglCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: Terminal,\n  colors: IColorSet,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): WebglCharAtlas {\n  const newConfig = generateConfig(scaledCellWidth, scaledCellHeight, scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new WebglCharAtlas(document, newConfig),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { Terminal, FontWeight } from 'xterm';\nimport { IColorSet, IColor } from 'browser/Types';\n\nconst NULL_COLOR: IColor = {\n  css: '',\n  rgba: 0\n};\n\nexport function generateConfig(scaledCellWidth: number, scaledCellHeight: number, scaledCharWidth: number, scaledCharHeight: number, terminal: Terminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionTransparent: NULL_COLOR,\n    selectionOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: terminal.getOption('customGlyphs'),\n    devicePixelRatio: window.devicePixelRatio,\n    letterSpacing: terminal.getOption('letterSpacing'),\n    lineHeight: terminal.getOption('lineHeight'),\n    scaledCellWidth,\n    scaledCellHeight,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.getOption('fontFamily'),\n    fontSize: terminal.getOption('fontSize'),\n    fontWeight: terminal.getOption('fontWeight') as FontWeight,\n    fontWeightBold: terminal.getOption('fontWeightBold') as FontWeight,\n    allowTransparency: terminal.getOption('allowTransparency'),\n    drawBoldTextInBrightColors: terminal.getOption('drawBoldTextInBrightColors'),\n    minimumContrastRatio: terminal.getOption('minimumContrastRatio'),\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRasterizedGlyph, IBoundingBox, IRasterizedGlyphSet } from '../Types';\nimport { DEFAULT_COLOR, Attributes } from 'common/buffer/Constants';\nimport { throwIfFalsy } from '../WebglUtils';\nimport { IColor } from 'browser/Types';\nimport { IDisposable } from 'xterm';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { channels, rgba } from 'browser/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\n// For debugging purposes, it can be useful to set this to a really tiny value,\n// to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\n/**\n * The amount of the texture to be filled before throwing it away and starting\n * again. Since the throw away and individual glyph draws don't cost too much,\n * this prevent juggling multiple textures in the GL context.\n */\nconst TEXTURE_CAPACITY = Math.floor(TEXTURE_HEIGHT * 0.8);\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  offset: { x: 0, y: 0 },\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nexport class WebglCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: { [code: number]: IRasterizedGlyphSet } = {};\n  private _cacheMapCombined: { [chars: string]: IRasterizedGlyphSet } = {};\n\n  // The texture that the atlas is drawn to\n  public cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // Since glyphs are expected to be around the same height, the packing\n  // strategy used it to fill a row with glyphs while keeping track of the\n  // tallest glyph in the row. Once the row is full a new row is started at\n  // (0,lastRow+lastRowTallestGlyph).\n  private _currentRowY: number = 0;\n  private _currentRowX: number = 0;\n  private _currentRowHeight: number = 0;\n\n  public hasCanvasChanged = false;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  constructor(\n    document: Document,\n    private _config: ICharAtlasConfig\n  ) {\n    this.cacheCanvas = document.createElement('canvas');\n    this.cacheCanvas.width = TEXTURE_WIDTH;\n    this.cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this.cacheCanvas.getContext('2d', { alpha: true }));\n\n    this._tmpCanvas = document.createElement('canvas');\n    this._tmpCanvas.width = this._config.scaledCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCanvas.height = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n  }\n\n  public dispose(): void {\n    if (this.cacheCanvas.parentElement) {\n      this.cacheCanvas.parentElement.removeChild(this.cacheCanvas);\n    }\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126\n    for (let i = 33; i < 126; i++) {\n      const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR);\n      this._cacheMap[i] = {\n        [DEFAULT_COLOR]: {\n          [DEFAULT_COLOR]: rasterizedGlyph\n        }\n      };\n    }\n  }\n\n  public beginFrame(): boolean {\n    if (this._currentRowY > TEXTURE_CAPACITY) {\n      this.clearTexture();\n      this.warmUp();\n      return true;\n    }\n    return false;\n  }\n\n  public clearTexture(): void {\n    if (this._currentRowX === 0 && this._currentRowY === 0) {\n      return;\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._cacheMap = {};\n    this._cacheMapCombined = {};\n    this._currentRowHeight = 0;\n    this._currentRowX = 0;\n    this._currentRowY = 0;\n    this._didWarmUp = false;\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMapCombined[chars];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMapCombined[chars] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(chars, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  public getRasterizedGlyph(code: number, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMap[code];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMap[code] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(code, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor);\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        return {\n          rgba: bgColor << 8,\n          css: `#${toPaddedHex(arr[0])}${toPaddedHex(arr[1])}${toPaddedHex(arr[2])}`\n        };\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground;\n        }\n        return this._config.colors.background;\n    }\n  }\n\n  private _getForegroundCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): string {\n    const minimumContrastCss = this._getMinimumContrastCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold);\n    if (minimumContrastCss) {\n      return minimumContrastCss;\n    }\n\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).css;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        return channels.toCss(arr[0], arr[1], arr[2]);\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          const bg = this._config.colors.background.css;\n          if (bg.length === 9) {\n            // Remove bg alpha channel if present\n            return bg.substr(0, 7);\n          }\n          return bg;\n        }\n        return this._config.colors.foreground.css;\n    }\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): string | undefined {\n    if (this._config.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getCss(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setCss(bg, fg, null);\n      return undefined;\n    }\n\n    const css = channels.toCss(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setCss(bg, fg, css);\n\n    return css;\n  }\n\n  private _drawToCache(code: number, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(chars: string, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    this.hasCanvasChanged = true;\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.scaledCharWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold);\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Check if the char is a powerline glyph, these will be restricted to a single cell glyph, no\n    // padding on either side that are allowed for other glyphs since they are designed to be pixel\n    // perfect but may render with \"bad\" anti-aliasing\n    let isPowerlineGlyph = false;\n    if (chars.length === 1) {\n      const code = chars.charCodeAt(0);\n      if (code >= 0xE0A0 && code <= 0xE0D6) {\n        isPowerlineGlyph = true;\n      }\n    }\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = isPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING;\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._config.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible,\n    // try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.clearRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw underline and strikethrough\n    if (underline || strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      if (underline) {\n        this._tmpCtx.moveTo(padding, padding + this._config.scaledCharHeight - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + this._config.scaledCharHeight - yOffset);\n      }\n      if (strikethrough) {\n        this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      }\n      this._tmpCtx.stroke();\n      this._tmpCtx.closePath();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // TODO: Support transparency\n    // let isEmpty = false;\n    // if (!this._config.allowTransparency) {\n    //   isEmpty = clearColor(imageData, backgroundColor);\n    // }\n\n    // Clear out the background color and determine if the glyph is empty.\n    const isEmpty = clearColor(imageData, backgroundColor);\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, isPowerlineGlyph, drawSuccess);\n    const clippedImageData = this._clipImageData(imageData, this._workBoundingBox);\n\n    // Check if there is enough room in the current row and go to next if needed\n    if (this._currentRowX + rasterizedGlyph.size.x > TEXTURE_WIDTH) {\n      this._currentRowX = 0;\n      this._currentRowY += this._currentRowHeight;\n      this._currentRowHeight = 0;\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePosition.x = this._currentRowX;\n    rasterizedGlyph.texturePosition.y = this._currentRowY;\n    rasterizedGlyph.texturePositionClipSpace.x = this._currentRowX / TEXTURE_WIDTH;\n    rasterizedGlyph.texturePositionClipSpace.y = this._currentRowY / TEXTURE_HEIGHT;\n\n    // Update atlas current row\n    this._currentRowHeight = Math.max(this._currentRowHeight, rasterizedGlyph.size.y);\n    this._currentRowX += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(clippedImageData, rasterizedGlyph.texturePosition.x, rasterizedGlyph.texturePosition.y);\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.scaledCharHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.scaledCharWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = width - 1; x >= 0; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1) / TEXTURE_WIDTH,\n        y: (boundingBox.bottom - boundingBox.top + 1) / TEXTURE_HEIGHT\n      },\n      offset: {\n        x: -boundingBox.left + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? Math.floor(this._config.letterSpacing / 2) : 0),\n        y: -boundingBox.top + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.scaledCellHeight - this._config.scaledCharHeight) / 2) : 0)\n      }\n    };\n  }\n\n  private _clipImageData(imageData: ImageData, boundingBox: IBoundingBox): ImageData {\n    const width = boundingBox.right - boundingBox.left + 1;\n    const height = boundingBox.bottom - boundingBox.top + 1;\n    const clippedData = new Uint8ClampedArray(width * height * 4);\n    for (let y = boundingBox.top; y <= boundingBox.bottom; y++) {\n      for (let x = boundingBox.left; x <= boundingBox.right; x++) {\n        const oldOffset = y * this._tmpCanvas.width * 4 + x * 4;\n        const newOffset = (y - boundingBox.top) * width * 4 + (x - boundingBox.left) * 4;\n        clippedData[newOffset] = imageData.data[oldOffset];\n        clippedData[newOffset + 1] = imageData.data[oldOffset + 1];\n        clippedData[newOffset + 2] = imageData.data[oldOffset + 2];\n        clippedData[newOffset + 3] = imageData.data[oldOffset + 3];\n      }\n    }\n    return new ImageData(clippedData, width, height);\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireCharAtlas } from '../atlas/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WebglCharAtlas } from 'atlas/WebglCharAtlas';\nimport { throwIfFalsy } from '../WebglUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: WebglCharAtlas | undefined;\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {}\n  public onBlur(terminal: Terminal): void {}\n  public onFocus(terminal: Terminal): void {}\n  public onCursorMove(terminal: Terminal): void {}\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: Terminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCellWidth, this._scaledCellHeight, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: Terminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      terminal.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.getOption('fontWeightBold') : terminal.getOption('fontWeight');\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.getOption('fontSize') * window.devicePixelRatio}px ${terminal.getOption('fontFamily')}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ITerminal } from 'browser/Types';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>\n  ) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.onOptionsChanged(terminal);\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this.onOptionsChanged(terminal);\n  }\n\n  public onBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {\n    if (terminal.getOption('cursorBlink')) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    // TODO: Need to expose API for this\n    if (!this._terminal.coreService.isCursorInitialized || this._terminal.coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!isTerminalFocused(terminal)) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = terminal.getOption('cursorStyle');\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === isTerminalFocused(terminal) &&\n          this._state.style === terminal.getOption('cursorStyle') &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.getOption('cursorStyle') || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.getOption('cursorStyle');\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, terminal.getOption('cursorWidth'));\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isTerminalFocused(terminal)) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n\nfunction isTerminalFocused(terminal: Terminal): boolean {\n  return document.activeElement === terminal.textarea && document.hasFocus();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from '../atlas/CharAtlasUtils';\nimport { ITerminal, IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ITerminal) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    terminal.linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IEvent } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\nimport { ICharacterJoinerService, IRenderService } from 'browser/services/Services';\nimport { IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { isSafari } from 'common/Platform';\n\nexport class WebglAddon implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {}\n\n  public activate(terminal: Terminal): void {\n    if (!terminal.element) {\n      throw new Error('Cannot activate WebglAddon before Terminal.open');\n    }\n    if (isSafari) {\n      throw new Error('Webgl is not currently supported on Safari');\n    }\n    this._terminal = terminal;\n    const renderService: IRenderService = (terminal as any)._core._renderService;\n    const characterJoinerService: ICharacterJoinerService = (terminal as any)._core._characterJoinerService;\n    const colors: IColorSet = (terminal as any)._core._colorManager.colors;\n    this._renderer = new WebglRenderer(terminal, colors, characterJoinerService, this._preserveDrawingBuffer);\n    this._renderer.onContextLoss(() => this._onContextLoss.fire());\n    renderService.setRenderer(this._renderer);\n  }\n\n  public dispose(): void {\n    if (!this._terminal) {\n      throw new Error('Cannot dispose WebglAddon because it is activated');\n    }\n    const renderService: IRenderService = (this._terminal as any)._core._renderService;\n    renderService.setRenderer((this._terminal as any)._core._createRenderer());\n    renderService.onResize(this._terminal.cols, this._terminal.rows);\n    this._renderer = undefined;\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearCharAtlas();\n  }\n}\n"],"names":["COMPONENT_NAME","iconButtonStyles","root","height","icon","fontSize","iconButtonProps","iconName","defaultClearButtonProps","ariaLabel","getClassNames","classNamesFunction","SearchBoxBase","props","forwardedRef","className","defaultValue","disabled","underlined","styles","labelText","placeholder","theme","clearButtonProps","disableAnimation","showIcon","customOnClear","customOnBlur","customOnEscape","customOnSearch","customOnKeyDown","iconProps","role","onChange","onChanged","hasFocus","setHasFocus","prevChangeTimestamp","useControllableValue","value","ev","newValue","timeStamp","current","uncastValue","setValue","String","rootElementRef","inputElementRef","mergedRootRef","useMergedRefs","id","useId","customOnClearClick","classNames","hasInput","length","nativeProps","onClear","defaultPrevented","focus","stopPropagation","preventDefault","onClearClick","onBlur","onInputChange","target","componentRef","useComponentRef","ref","onFocusCapture","onFocus","iconContainer","onClick","selectionStart","selectionEnd","Icon","field","onInput","onKeyDown","which","KeyCodes","clearButton","IconButton","displayName","GlobalClassNames","SearchBox","styled","palette","fonts","semanticColors","effects","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","selectors","borderColor","inputBorderHovered","inputIconHovered","width","pointerEvents","position","inputFocusBorderAlt","cursor","borderWidth","justifyContent","flexShrink","textAlign","inputIcon","inputIconDisabled","transition","flexBasis","margin","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText","undefined","scope","self","module","exports","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","FitAddon","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","NON_WORD_CHARACTERS","e","_linesCacheTimeoutId","findNext","term","searchOptions","Error","clearSelection","currentSelection","startCol","startRow","hasSelection","incremental","getSelectionPosition","endRow","startColumn","endColumn","_initLinesCache","searchPosition","result","_findInLine","y","buffer","active","baseY","_selectResult","findPrevious","isReverseSearch","row","col","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","onResize","clearTimeout","setTimeout","_isWholeWord","searchIndex","line","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","resultIndex","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","indexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","size","i","cell","getCell","char","getChars","nextCell","getWidth","lineIndex","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","getCode","push","join","select","viewportY","scrollLines","SearchAddon","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","_colors","_gl","_dimensions","_activeBuffer","_vertices","count","attributes","attributesBuffers","selectionAttributes","gl","program","throwIfFalsy","createProgram","_program","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","_atlasTexture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","beginFrame","_atlas","updateCell","x","code","bg","fg","chars","_updateCell","array","rasterizedGlyph","NULL_CELL_CODE","getRasterizedGlyphCombinedChar","getRasterizedGlyph","scaledCharLeft","scaledCharTop","scaledCanvasWidth","scaledCanvasHeight","texturePositionClipSpace","sizeClipSpace","fill","updateSelection","model","s","selectionOpaque","rgba","selection","columnSelectMode","endCol","viewportCappedEndRow","viewportCappedStartRow","_updateSelectionRange","viewportStartRow","startRowEndCol","middleRowsCount","viewportEndRow","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_FG_OFFSET","workCell","AttributeData","RENDER_MODEL_BG_OFFSET","getBgColorMode","c","_getColorFromAnsiIndex","getBgColor","arr","toColorRGB","c2","background","COMBINED_CHAR_BIT_MASK","idx","ansi","canvas","newCount","setColors","render","renderModel","isSelectionVisible","useProgram","activeBuffer","bufferLength","lineLengths","si","sub","subarray","set","STREAM_DRAW","hasCanvasChanged","uniform1i","activeTexture","TEXTURE0","cacheCanvas","generateMipmap","uniformMatrix4fv","PROJECTION_MATRIX","uniform2f","drawElementsInstanced","TRIANGLES","setAtlas","atlas","setDimensions","GlyphRenderer","BYTES_PER_RECTANGLE","_updateCachedColors","DYNAMIC_DRAW","_updateViewportRectangle","_bgFloat","_colorToFloat32Array","_selectionFloat","_addRectangleFloat","scaledCellWidth","scaledCellHeight","INDICES_PER_RECTANGLE","updateBackgrounds","vertices","rectangleCount","currentStartX","currentBg","currentFg","currentInverse","modelIndex","inverse","_updateRectangle","startX","endX","foreground","expandFloat32Array","x1","y1","r","g","b","_addRectangle","a","RectangleRenderer","Uint32Array","indexCount","RenderModel","sliceFallback","start","end","min","constructor","_characterJoinerService","preserveDrawingBuffer","_model","_workCell","CellData","_onRequestRedraw","EventEmitter","_onContextLoss","_renderLayers","LinkRenderLayer","screenElement","CursorRenderLayer","scaledCharWidth","scaledCharHeight","canvasWidth","canvasHeight","_devicePixelRatio","devicePixelRatio","_updateDimensions","_canvas","document","createElement","contextAttributes","antialias","depth","getContext","register","addDisposableDomListener","fire","appendChild","_rectangleRenderer","_glyphRenderer","onCharSizeChanged","_isAttached","body","contains","event","removeChild","t","_charAtlas","colors","l","reset","_refreshCharAtlas","onDevicePixelRatioChange","style","onSelectionChanged","_updateSelectionModel","onOptionsChanged","acquireCharAtlas","warmUp","clearCharAtlas","clearTexture","_updateModel","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","_charSizeService","onGridChanged","ydisp","lines","get","joinedRanges","getJoinedCharacters","loadCell","isJoined","lastCharX","range","shift","JoinedCellData","j","NULL_CELL_CHAR","ceil","getOption","round","Disposable","WebglRenderer","firstCell","content","combinedData","_width","isCombined","setFromCharData","getAsCharData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","newLength","newArray","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","splice","newEntry","WebglCharAtlas","index","NULL_COLOR","css","clonedColors","cursorAccent","selectionTransparent","contrastCache","customGlyphs","letterSpacing","lineHeight","fontWeightBold","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","TEXTURE_WIDTH","TEXTURE_HEIGHT","TEXTURE_CAPACITY","TRANSPARENT_COLOR","NULL_RASTERIZED_GLYPH","texturePosition","_config","_didWarmUp","_cacheMap","_cacheMapCombined","_currentRowY","_currentRowX","_currentRowHeight","_workBoundingBox","top","left","bottom","right","_workAttributeData","_cacheCtx","alpha","_tmpCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","_doWarmUp","_drawToCache","DEFAULT_COLOR","clearRect","rasterizedGlyphSet","rasterizedGlyphSetBg","_getBackgroundColor","bgColorMode","bgColor","toPaddedHex","_getForegroundCss","fgColorMode","fgColor","bold","minimumContrastCss","_getMinimumContrastCss","channels","toCss","substr","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getCss","bgRgba","fgRgba","ensureContrastRatio","setCss","codeOrChars","fromCharCode","allowedWidth","save","isInvisible","isBold","isInverse","dim","isDim","italic","isItalic","underline","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","temp","temp2","globalCompositeOperation","fillStyle","fillRect","fontStyle","font","textBaseline","TEXT_BASELINE","globalAlpha","DIM_OPACITY","isPowerlineGlyph","charCodeAt","drawSuccess","tryDrawCustomChar","fillText","isBeyondCellBounds","clearColor","getImageData","lineWidth","yOffset","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","restore","imageData","_findGlyphBoundingBox","clippedImageData","_clipImageData","putImageData","boundingBox","restrictedGlyph","customGlyph","found","alphaOffset","data","clippedData","Uint8ClampedArray","oldOffset","newOffset","ImageData","isEmpty","toString","_container","zIndex","_alpha","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","classList","add","_initCanvas","_ctx","_clearAll","colorSet","_setTransparency","oldCanvas","cloneNode","replaceChild","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","_getFont","_clipRow","rect","clip","BaseRenderLayer","BLINK_INTERVAL","container","_onRequestRefreshRowsEvent","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","restartBlinkAnimation","pause","cursorY","resume","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","coreService","isCursorInitialized","isCursorHidden","viewportRelativeCursorY","cursorX","isTerminalFocused","cursorStyle","_renderBlurCursor","isCursorVisible","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","time","setInterval","activeElement","textarea","linkifier","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","linkifier2","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","rgb","contrastRatio","l1","l2","toRgba","blend","fgR","fgG","fgB","bgR","bgG","bgB","isOpaque","ratio","toColor","opaque","rgbaColor","toChannels","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","node","options","addEventListener","disposed","removeEventListener","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","ctx","xOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","Map","pattern","tmpCanvas","tmpCtx","startsWith","substring","split","map","parseFloat","createPattern","boxDrawingDefinition","Object","entries","instructions","Number","instruction","f","svgToCanvasInstructionMap","args","translateArgs","clamp","bezierCurveTo","cellWidth","cellHeight","isFirefox","CHAR_ATLAS_CELL_SPACING","_listeners","_disposed","_event","listener","arg1","arg2","queue","call","from","to","_disposables","_isDisposed","d","unregister","disposeArray","disposables","isNode","navigator","userAgent","platform","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","fillFallback","extended","ExtendedAttrs","fromColorRGB","clone","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","hasExtendedAttrs","updateExtended","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","fromCharData","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","second","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","codepoint","_interim","decode","input","startPos","StringToUtf32","interim","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","cachedModule","_preserveDrawingBuffer","renderService","characterJoinerService","_colorManager","_renderer","onContextLoss","setRenderer","_createRenderer","textureAtlas","clearTextureAtlas","WebglAddon"],"sourceRoot":""}