{"version":3,"file":"static/chunks/pages/shell-d9775b1c1621dee7.js","mappings":"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","sources":["webpack://_N_E/?be13","webpack://_N_E/./src/components/terminal.tsx","webpack://_N_E/./src/pages/shell.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/shell\",\n      function () {\n        return require(\"private-next-pages/shell.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/shell\"])\n      });\n    }\n  ","// cspell: ignore scrollback\n\nimport { AdbSubprocessProtocol, encodeUtf8 } from \"@yume-chan/adb\";\nimport { AutoDisposable } from \"@yume-chan/event\";\nimport { AbortController, WritableStream } from '@yume-chan/stream-extra';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { SearchAddon } from 'xterm-addon-search';\nimport { WebglAddon } from 'xterm-addon-webgl';\n\nexport class AdbTerminal extends AutoDisposable {\n    private element = document.createElement('div');\n\n    public terminal: Terminal = new Terminal({\n        scrollback: 9000,\n    });\n\n    public searchAddon = new SearchAddon();\n\n    private readonly fitAddon = new FitAddon();\n\n    private _socket: AdbSubprocessProtocol | undefined;\n    private _socketAbortController: AbortController | undefined;\n    public get socket() { return this._socket; }\n    public set socket(value) {\n        if (this._socket) {\n            // Remove event listeners\n            this.dispose();\n            this._socketAbortController?.abort();\n        }\n\n        this._socket = value;\n\n        if (value) {\n            this.terminal.clear();\n            this.terminal.reset();\n\n            this._socketAbortController = new AbortController();\n\n            // pty mode only has one stream\n            value.stdout.pipeTo(new WritableStream<Uint8Array>({\n                write: (chunk) => {\n                    this.terminal.write(chunk);\n                },\n            }), {\n                signal: this._socketAbortController.signal,\n            });\n\n            const _writer = value.stdin.getWriter();\n            this.addDisposable(this.terminal.onData(data => {\n                const buffer = encodeUtf8(data);\n                _writer.write(buffer);\n            }));\n\n            this.fit();\n        }\n    }\n\n    public constructor() {\n        super();\n\n        this.element.style.width = '100%';\n        this.element.style.height = '100%';\n        this.element.style.overflow = 'hidden';\n\n        this.terminal.options.fontFamily = '\"Cascadia Code\", Consolas, monospace, \"Source Han Sans SC\", \"Microsoft YaHei\"';\n        this.terminal.options.letterSpacing = 1;\n        this.terminal.options.cursorStyle = 'bar';\n        this.terminal.loadAddon(this.searchAddon);\n        this.terminal.loadAddon(this.fitAddon);\n    }\n\n    public setContainer(container: HTMLDivElement) {\n        container.appendChild(this.element);\n        if (!this.terminal.element) {\n            void this.element.offsetWidth;\n            this.terminal.open(this.element);\n            this.terminal.loadAddon(new WebglAddon());\n            // WebGL renderer ignores `cursorBlink` set before it initialized\n            this.terminal.options.cursorBlink = true;\n            this.fit();\n        }\n    }\n\n    public fit() {\n        this.fitAddon.fit();\n        // Resize remote terminal\n        const { rows, cols } = this.terminal;\n        this._socket?.resize(rows, cols);\n    }\n}\n","import { IconButton, SearchBox, Stack, StackItem } from '@fluentui/react';\nimport { action, autorun, makeAutoObservable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { useCallback, useEffect } from 'react';\nimport 'xterm/css/xterm.css';\nimport { ResizeObserver } from '../components';\nimport { GlobalState } from \"../state\";\nimport { Icons, RouteStackProps } from '../utils';\n\nlet terminal: import('../components/terminal').AdbTerminal;\nif (typeof window !== 'undefined') {\n    const { AdbTerminal } = require('../components/terminal');\n    terminal = new AdbTerminal();\n}\n\nconst state = makeAutoObservable({\n    visible: false,\n    setVisible(value: boolean) {\n        this.visible = value;\n    },\n\n    searchKeyword: '',\n    setSearchKeyword(value: string) {\n        this.searchKeyword = value;\n        terminal.searchAddon.findNext(value, { incremental: true });\n    },\n\n    searchPrevious() {\n        terminal.searchAddon.findPrevious(this.searchKeyword);\n    },\n    searchNext() {\n        terminal.searchAddon.findNext(this.searchKeyword);\n    }\n}, {\n    searchPrevious: action.bound,\n    searchNext: action.bound,\n});\n\nautorun(() => {\n    if (!terminal) {\n        return;\n    }\n\n    if (!GlobalState.device) {\n        terminal.socket = undefined;\n        return;\n    }\n\n    if (!terminal.socket && state.visible) {\n        GlobalState.device.subprocess.shell()\n            .then(action(shell => {\n                terminal.socket = shell;\n            }), (e) => {\n                GlobalState.showErrorDialog(e);\n            });\n    }\n});\n\nconst UpIconProps = { iconName: Icons.ChevronUp };\nconst DownIconProps = { iconName: Icons.ChevronDown };\n\nconst Shell: NextPage = (): JSX.Element | null => {\n    const handleSearchKeywordChange = useCallback((e, value?: string) => {\n        state.setSearchKeyword(value ?? '');\n    }, []);\n\n    const handleResize = useCallback(() => {\n        terminal.fit();\n    }, []);\n\n    const handleContainerRef = useCallback((container: HTMLDivElement | null) => {\n        if (container) {\n            terminal.setContainer(container);\n        }\n    }, []);\n\n    useEffect(() => {\n        state.setVisible(true);\n        return () => {\n            state.setVisible(false);\n        };\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Interactive Shell - Android Web Toolbox</title>\n            </Head>\n\n            <StackItem>\n                <Stack horizontal>\n                    <StackItem grow>\n                        <SearchBox\n                            placeholder=\"Find\"\n                            value={state.searchKeyword}\n                            onChange={handleSearchKeywordChange}\n                            onSearch={state.searchNext}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!state.searchKeyword}\n                            iconProps={UpIconProps}\n                            onClick={state.searchPrevious}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!state.searchKeyword}\n                            iconProps={DownIconProps}\n                            onClick={state.searchNext}\n                        />\n                    </StackItem>\n                </Stack>\n            </StackItem>\n\n            <StackItem grow styles={{ root: { position: 'relative', minHeight: 0 } }}>\n                <ResizeObserver onResize={handleResize} />\n                <div ref={handleContainerRef} style={{ height: '100%' }} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(Shell);\n"],"names":["window","__NEXT_P","push","AdbTerminal","element","document","createElement","terminal","Terminal","scrollback","searchAddon","SearchAddon","fitAddon","FitAddon","style","width","height","overflow","options","fontFamily","letterSpacing","cursorStyle","loadAddon","setContainer","container","appendChild","this","offsetWidth","open","WebglAddon","cursorBlink","fit","rows","cols","_socket","resize","socket","value","dispose","_socketAbortController","abort","clear","reset","AbortController","stdout","pipeTo","WritableStream","write","chunk","signal","_writer","stdin","getWriter","addDisposable","onData","data","buffer","encodeUtf8","AutoDisposable","require","state","makeAutoObservable","visible","setVisible","searchKeyword","setSearchKeyword","findNext","incremental","searchPrevious","findPrevious","searchNext","action","autorun","GlobalState","then","shell","e","undefined","UpIconProps","iconName","Icons","DownIconProps","observer","handleSearchKeywordChange","useCallback","handleResize","handleContainerRef","useEffect","Stack","RouteStackProps","Head","title","StackItem","horizontal","grow","SearchBox","placeholder","onChange","onSearch","IconButton","disabled","iconProps","onClick","styles","root","position","minHeight","ResizeObserver","onResize","div","ref"],"sourceRoot":""}