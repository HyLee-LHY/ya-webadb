{"version":3,"file":"static/chunks/15c8eed3-b669a06fb880d027.js","mappings":"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EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAG7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAC7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EAAG,EAAGktB,EAAG,EAAGC,EAAG,IAG7B,SAAK,CAAC,CAAEptB,EAAG,EAAGC,EA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,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAA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","sources":["webpack://_N_E/xterm/webpack/universalModuleDefinition","webpack://_N_E/xterm/./src/browser/AccessibilityManager.ts","webpack://_N_E/xterm/./src/browser/Clipboard.ts","webpack://_N_E/xterm/./src/browser/Color.ts","webpack://_N_E/xterm/./src/browser/ColorContrastCache.ts","webpack://_N_E/xterm/./src/browser/ColorManager.ts","webpack://_N_E/xterm/./src/browser/Dom.ts","webpack://_N_E/xterm/./src/browser/Lifecycle.ts","webpack://_N_E/xterm/./src/browser/Linkifier.ts","webpack://_N_E/xterm/./src/browser/Linkifier2.ts","webpack://_N_E/xterm/./src/browser/LocalizableStrings.ts","webpack://_N_E/xterm/./src/browser/MouseZoneManager.ts","webpack://_N_E/xterm/./src/browser/RenderDebouncer.ts","webpack://_N_E/xterm/./src/browser/ScreenDprMonitor.ts","webpack://_N_E/xterm/./src/browser/Terminal.ts","webpack://_N_E/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://_N_E/xterm/./src/browser/Viewport.ts","webpack://_N_E/xterm/./src/browser/input/CompositionHelper.ts","webpack://_N_E/xterm/./src/browser/input/Mouse.ts","webpack://_N_E/xterm/./src/browser/input/MoveToCell.ts","webpack://_N_E/xterm/./src/browser/public/Terminal.ts","webpack://_N_E/xterm/./src/browser/renderer/BaseRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/CursorRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/CustomGlyphs.ts","webpack://_N_E/xterm/./src/browser/renderer/GridCache.ts","webpack://_N_E/xterm/./src/browser/renderer/LinkRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/Renderer.ts","webpack://_N_E/xterm/./src/browser/renderer/RendererUtils.ts","webpack://_N_E/xterm/./src/browser/renderer/SelectionRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/TextRenderLayer.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/Constants.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://_N_E/xterm/./src/browser/renderer/atlas/LRUMap.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://_N_E/xterm/./src/browser/selection/SelectionModel.ts","webpack://_N_E/xterm/./src/browser/services/CharSizeService.ts","webpack://_N_E/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://_N_E/xterm/./src/browser/services/CoreBrowserService.ts","webpack://_N_E/xterm/./src/browser/services/DecorationService.ts","webpack://_N_E/xterm/./src/browser/services/MouseService.ts","webpack://_N_E/xterm/./src/browser/services/RenderService.ts","webpack://_N_E/xterm/./src/browser/services/SelectionService.ts","webpack://_N_E/xterm/./src/browser/services/Services.ts","webpack://_N_E/xterm/./src/browser/services/SoundService.ts","webpack://_N_E/xterm/./src/common/CircularList.ts","webpack://_N_E/xterm/./src/common/Clone.ts","webpack://_N_E/xterm/./src/common/CoreTerminal.ts","webpack://_N_E/xterm/./src/common/EventEmitter.ts","webpack://_N_E/xterm/./src/common/InputHandler.ts","webpack://_N_E/xterm/./src/common/Lifecycle.ts","webpack://_N_E/xterm/./src/common/Platform.ts","webpack://_N_E/xterm/./src/common/TypedArrayUtils.ts","webpack://_N_E/xterm/./src/common/WindowsMode.ts","webpack://_N_E/xterm/./src/common/buffer/AttributeData.ts","webpack://_N_E/xterm/./src/common/buffer/Buffer.ts","webpack://_N_E/xterm/./src/common/buffer/BufferLine.ts","webpack://_N_E/xterm/./src/common/buffer/BufferRange.ts","webpack://_N_E/xterm/./src/common/buffer/BufferReflow.ts","webpack://_N_E/xterm/./src/common/buffer/BufferSet.ts","webpack://_N_E/xterm/./src/common/buffer/CellData.ts","webpack://_N_E/xterm/./src/common/buffer/Constants.ts","webpack://_N_E/xterm/./src/common/buffer/Marker.ts","webpack://_N_E/xterm/./src/common/data/Charsets.ts","webpack://_N_E/xterm/./src/common/data/EscapeSequences.ts","webpack://_N_E/xterm/./src/common/input/Keyboard.ts","webpack://_N_E/xterm/./src/common/input/TextDecoder.ts","webpack://_N_E/xterm/./src/common/input/UnicodeV6.ts","webpack://_N_E/xterm/./src/common/input/WriteBuffer.ts","webpack://_N_E/xterm/./src/common/input/XParseColor.ts","webpack://_N_E/xterm/./src/common/parser/Constants.ts","webpack://_N_E/xterm/./src/common/parser/DcsParser.ts","webpack://_N_E/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://_N_E/xterm/./src/common/parser/OscParser.ts","webpack://_N_E/xterm/./src/common/parser/Params.ts","webpack://_N_E/xterm/./src/common/public/AddonManager.ts","webpack://_N_E/xterm/./src/common/public/BufferApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferLineApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://_N_E/xterm/./src/common/public/ParserApi.ts","webpack://_N_E/xterm/./src/common/public/UnicodeApi.ts","webpack://_N_E/xterm/./src/common/services/BufferService.ts","webpack://_N_E/xterm/./src/common/services/CharsetService.ts","webpack://_N_E/xterm/./src/common/services/CoreMouseService.ts","webpack://_N_E/xterm/./src/common/services/CoreService.ts","webpack://_N_E/xterm/./src/common/services/DirtyRowService.ts","webpack://_N_E/xterm/./src/common/services/InstantiationService.ts","webpack://_N_E/xterm/./src/common/services/LogService.ts","webpack://_N_E/xterm/./src/common/services/OptionsService.ts","webpack://_N_E/xterm/./src/common/services/ServiceRegistry.ts","webpack://_N_E/xterm/./src/common/services/Services.ts","webpack://_N_E/xterm/./src/common/services/UnicodeService.ts","webpack://_N_E/xterm/webpack/bootstrap","webpack://_N_E/xterm/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService, IDecorationService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'browser/services/DecorationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  public decorationService: IDecorationService;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.decorationService = this.register(this._instantiationService.createInstance(DecorationService));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    this.decorationService.attachToDom(this.screenElement, this._renderService, this._bufferService);\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this.decorationService!.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.rawOptions.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.rawOptions.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDecorationService, IRenderService } from 'browser/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService } from 'common/services/Services';\nimport { IDecorationOptions, IDecoration, IMarker } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n\n  private readonly _decorations: Decoration[] = [];\n  private _container: HTMLElement | undefined;\n  private _screenElement: HTMLElement | undefined;\n  private _renderService: IRenderService | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(@IInstantiationService private readonly _instantiationService: IInstantiationService) { super(); }\n\n  public attachToDom(screenElement: HTMLElement, renderService: IRenderService): void {\n    this._renderService = renderService;\n    this._screenElement = screenElement;\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    screenElement.appendChild(this._container);\n    this.register(this._renderService.onRenderedBufferChange(() => this.refresh()));\n    this.register(this._renderService.onDimensionsChange(() => this.refresh(true)));\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    if (decorationOptions.marker.isDisposed || !this._container) {\n      return undefined;\n    }\n    const decoration = this._instantiationService.createInstance(Decoration, decorationOptions, this._container);\n    this._decorations.push(decoration);\n    decoration.onDispose(() => this._decorations.splice(this._decorations.indexOf(decoration), 1));\n    this._queueRefresh();\n    return decoration;\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.refresh();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refresh(shouldRecreate?: boolean): void {\n    if (!this._renderService) {\n      return;\n    }\n    for (const decoration of this._decorations) {\n      decoration.render(this._renderService, shouldRecreate);\n    }\n  }\n\n  public dispose(): void {\n    for (const decoration of this._decorations) {\n      decoration.dispose();\n    }\n    if (this._screenElement && this._container && this._screenElement.contains(this._container)) {\n      this._screenElement.removeChild(this._container);\n    }\n  }\n}\nexport class Decoration extends Disposable implements IDecoration {\n  private readonly _marker: IMarker;\n  private _element: HTMLElement | undefined;\n\n  public isDisposed: boolean = false;\n\n  public get element(): HTMLElement | undefined { return this._element; }\n  public get marker(): IMarker { return this._marker; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  private _onRender = new EventEmitter<HTMLElement>();\n  public get onRender(): IEvent<HTMLElement> { return this._onRender.event; }\n\n  public x: number;\n  public anchor: 'left' | 'right';\n  public width: number;\n  public height: number;\n\n  constructor(\n    options: IDecorationOptions,\n    private readonly _container: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.x = options.x ?? 0;\n    this._marker = options.marker;\n    this._marker.onDispose(() => this.dispose());\n    this.anchor = options.anchor || 'left';\n    this.width = options.width || 1;\n    this.height = options.height || 1;\n  }\n\n  public render(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (!this._element || shouldRecreate) {\n      this._createElement(renderService, shouldRecreate);\n    }\n    if (this._container && this._element && !this._container.contains(this._element)) {\n      this._container.append(this._element);\n    }\n    this._refreshStyle(renderService);\n    if (this._element) {\n      this._onRender.fire(this._element);\n    }\n  }\n\n  private _createElement(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (shouldRecreate && this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this._element = document.createElement('div');\n    this._element.classList.add('xterm-decoration');\n    this._element.style.width = `${this.width * renderService.dimensions.actualCellWidth}px`;\n    this._element.style.height = `${this.height * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.top = `${(this.marker.line - this._bufferService.buffers.active.ydisp) * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.lineHeight = `${renderService.dimensions.actualCellHeight}px`;\n\n    if (this.x && this.x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      this._element.style.display = 'none';\n    }\n    if (this.anchor === 'right') {\n      this._element.style.right = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      this._element.style.left = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _refreshStyle(renderService: IRenderService): void {\n    if (!this._element) {\n      return;\n    }\n    const line = this.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line > this._bufferService.rows) {\n      // outside of viewport\n      this._element.style.display = 'none';\n    } else {\n      this._element.style.top = `${line * renderService.dimensions.actualCellHeight}px`;\n      this._element.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }\n  }\n\n  public override dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    if (this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this.isDisposed = true;\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  refresh(): void;\n  attachToDom(screenElement: HTMLElement, renderService: IRenderService, bufferService: IBufferService): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public clearMarkers(y?: number): void {\n    this._isClearing = true;\n    if (y !== undefined) {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].line === y) {\n          this.markers[i].dispose();\n          this.markers.splice(i--, 1);\n        }\n      }\n    } else {\n      for (const marker of this.markers) {\n        marker.dispose();\n      }\n      this.markers = [];\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n"],"names":["self","module","exports","r","e","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","i","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","t","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","channels","rgb","rgba","toPaddedHex","c","s","contrastRatio","l1","l2","toCss","g","b","a","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","toColorRGB","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","undefined","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","decorationService","DecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_colorManager","req","acc","ident","C0","ESC","toRgbString","BEL","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","rowDifference","currX","CONSTRUCTOR_ONLY_OPTIONS","_core","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","substr","parseFloat","putImageData","createPattern","boxDrawingDefinition","entries","instructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","clamp","bezierCurveTo","lineTo","moveTo","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_width","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","offset","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","display","_applyMinimumContrast","_addStyle","padStart","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_decorations","marker","isDisposed","decoration","Decoration","onDispose","_queueRefresh","shouldRecreate","render","_onDispose","_marker","anchor","_createElement","append","_refreshStyle","right","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","IDecorationService","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","u","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","d","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","codepoint","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","mid","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","toLowerCase","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","terminal","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}